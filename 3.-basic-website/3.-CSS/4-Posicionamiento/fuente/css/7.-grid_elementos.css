body{
    width: 50vw;
    margin: 0 auto;
    background-color: lightblue;
    font-family: 'Open Sans', sans-serif;
    font-family: 'Roboto', sans-serif;
}

img{
    max-width:100%;
    max-height:100%;
}

ul{
    list-style: none;
    padding: 0px;
}

h1{
    font-size: 2rem;
}

h2{
    font-size: 1.5rem;
}

h3{
    font-size: 1.25rem;
}

h1, h2, h3, h4{
    text-align: center;
    /*line-height: 100px;*/
    margin: 10px;
}
  
article>p{
    margin-bottom: 0px;
}

.borde-externo{
    border: 4px solid lightblue;
    padding: 10px 30px 30px 30px;
    width: 80%;     
}

.borde-interno{
    border: 1px solid black;
}

.gap{
    /*shortcut for column-gap and row-gap
    gap: row-gap column-gap*/
    gap: 10px;
}

.contenedor-grid-nv1{
	display: grid;
/*	grid-template-columns: 200px 100px 200px 100px;
    grid-template-rows: auto auto;*/
    /* Dejo en espacio de 10px en las líneas entre filas y columnas */
    /* Creación de tres columnas (creación explícita). La de enmedio tiene el doble de tamaño que las otras. Usando fr, el navegador calcula el tamaño de cada columna en función del tamaño de su contenedor
        Se crean tantas filas como sea necesario para acomodar las cajas que se hayan definido (creación implícita)
    */
    background-color: bisque;
    grid-template-columns: 1fr;
    padding: 10px 50px 50px 50px;
    align-items: center;

}

.contenedor-grid-nv2{
    display: grid;
    background-color: bisque;
    margin:0px;
}

.contenedor-grid-nv3{
    display:grid;
    margin:0px;
}

.disposicion-tres-columnas{
    grid-template-columns: 1fr 2fr 1fr; 
}

.disposicion-cuatro-columnas{
    grid-template-columns: 20% 2fr 1fr 100px; 
}

.disposicion-tres-columnas-repetitivas{
    grid-template-columns: 1fr repeat(3, 2fr) 0.5fr;  /*Se crean 5 columnas y tantas filas como sean necesarias para acomodar elementos (filas implícitas)*/
}

.disposicion-minmax{
    grid-auto-rows: minmax(75px, auto); /*Las filas auto creadas son de entre 75px y el máximo de la anchura del contenedor*/
}

.disposicion-tres-columnas-minmax{
    grid-template-columns: 1fr minmax(40px, 3fr) 0.5fr;
}

.disposicion-columnas-y-filas-nombres{
    grid-template-columns: [columna1] 150px [columna2] minmax(50px, 10%) [columna3] 1fr [columna4] 0.5fr [columna5] 1fr [fin-columnas];
    grid-template-rows: [fila1] 35% [fila2] 2fr [fila3] auto [fin-filas];
}

.disposicion-tres-filas-repeat-minmax{
    grid-template-rows: repeat(3, minmax(100px, 2fr));
    grid-auto-flow: column;
}

.disposicion-dos-columnas{
    grid-template-columns: 1fr 2fr;    
}

.disposicion-dos-filas{
    grid-template-rows: 1fr 2fr;
}

.disposicion-tres-filas-repeat-minmax{
    grid-template-rows: repeat(3, minmax(100px, 2fr));
}

.disposicion-4filas-y-9columnas {
    display: grid;
    grid-template-columns: repeat(9, 1fr);
    grid-template-rows: repeat(4, minmax(100px, auto));
}

.disposicion-areas {
    display: grid;
    grid-template-columns: 0.5 fr repeat (3, 1fr);
    grid-template-areas: 
      "header header header header"
      "sidebar main main main"
      "footer footer footer footer";
}

.elemento-grid{
    margin:0;
    padding: 15px;
    background:azure;
    text-align: center;
}

.elemento-grid-encabezado{
    grid-area: header;
}

.elemento-grid-lateral{
    grid-area: sidebar;
}

.elemento-grid-principal{
    grid-area: main;
}

.elemento-grid-pie{
    grid-area: footer;
}

.min-height{
    min-height: 300px;
}

.max-width{
/*pertentages with fr when creating columns and rows provide with weird behaviour*/
    max-width: 300px;
    border: 1px solid;
}

.gaf-column{
    grid-auto-flow: column;
}

#ejemplo1 li:nth-child(2){
        grid-column-start: 2;
        grid-column-end: fin-columnas;
        grid-row-start: fila1;
        grid-row-end: 3;
        z-index: 1; /*elements with larger z-index get over those with smaller z-index */
}

#ejemplo1 li:nth-child(5){
    grid-column-start: 1;
    grid-column-end: columna-3;
    grid-row-start: fila2;
    grid-row-end: fila4;
    background-color:coral;
}

#ejemplo2 li:nth-child(3){
    grid-column: 2/2;
    grid-row: 1/3;      //It takes 2 rows: 1 and 2.Last position is not utilized
}


#ejemplo2 li:nth-child(7){
    grid-column: 3/3;
    grid-row: 2/4;
}

#ejemplo3 li:nth-child(2){
    /*It expands 2 columns from where it starts */
    grid-column: span 2;
}

#ejemplo3 li:nth-child(4){
    /*It starts at column num 2 and it ends two columns later */
    grid-column: 2/span 2;
    /*It starts at row called "fila2" and it ends three rows later */
    grid-row: fila2 / span 3;
}

#ejemplo4 li:nth-child(2){
    /* Defino dónde se va a colocar una caja. La sintaxis es:   fila inicio / columna inicio / fila fin / columna fin   
        Es equivalente a:
            grid-row: 2/4;
            grid-column: 3/5;   
    */
    grid-area: fila4 / 3 / span 1 / 5;
}

#ejemplo4 li:nth-child(4){
    /* Defino dónde se va a colocar una caja. La sintaxis es:   fila inicio / columna inicio / fila fin / columna fin   
        Es equivalente a:
            grid-row: 2/4;
            grid-column: 3/5;   
    */
    grid-area: fila1 / span 2 / columna1 / 3;
}

.ji-center{
    justify-items: center;
}

.js-start{
    justify-self: start;
}

.js-center{
    justify-self: center;
}

.js-end{
    justify-self: end;
}

.js-stretch{
    justify-self: stretch;
}

.as-start{
    align-self: start;
}

.as-center{
    align-self: center;
}

.as-end{
    align-self: end;
}

.ai-start-end{
    align-items: start end;
}

.ps-start-end{
    place-self: start end;
}

.ps-center-start{
    place-self: center start;
}

.ps-end-stretch{
    place-self: end stretch;
}

.gaf-column{
    grid-auto-flow: column;
}

li{
    border: 2px solid lightblue;
}

.subgrid-columnas {
    display: grid;
    grid-column: 2 / 7;
    grid-row: 2 / 4;
    grid-template-columns: subgrid;
    grid-template-rows: repeat(3, 1fr);
}

.subgrid-filas {
    display: grid;
    grid-column: 2 / 7;
    grid-row: 2 / 4;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: subgrid;
}

.subgrid-filas-y-columnas{
    display: grid;
    grid-column: 2 / 7;
    grid-row: 2 / 4;
    grid-template-columns: subgrid;
    grid-template-rows: subgrid;
}

.elemento-dentro-subgrid{
    /*grid-column: 2 / 6;
    grid-row: 1 / 3;*/
    grid-area: 1 / 2 / 3 / 6;
}